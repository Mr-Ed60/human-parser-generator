copybook                ::= { record };
record                  ::= renames-record | values-record | basic-record ".";

renames-record          ::= "66" level-name "RENAMES"  identifier-range ;
level-name              ::= "FILLER" | identifier ;
identifier-range        ::= identifier [ _ @ "THRU" | _ @ "THROUGH" through @ identifier ] ;

values-record           ::= "88" level-name "VALUES" [ _ @ "IS" | _ @ "ARE"] { value } ;
value                   ::= literal | variable ;
literal                 ::= int | float | string ;
variable                ::= identifier [ _ @ "(" subset _ @ ")" ];
subset                  ::= limit @ numeric [ _ @ ":" next @ subset ];
numeric                 ::= int | identifier;

basic-record            ::= level @ int level-name { option } ;

option                  ::= redefines-option
                          | external-option
                          | internal-option
                          | picture-option
                          | usage-option
                          | sign-option
                          | occurs-option
                          | sync-option
                          | just-option
                          | blank-option
                          | value-option
                          ;

redefines-option        ::= "REDEFINES" redefined @ identifier ;
external-option         ::= [ _ @ "IS" ] "EXTERNAL" ;
internal-option         ::= [ _ @ "IS" ] "INTERNAL" ;
usage-option            ::= [ _ @ "USAGE" [ _ @ "IS" ] ] usage;
sign-option             ::= "SIGN" [ _ @ "IS" ] "LEADING" | "TRAILING" [ "SEPARATE" [ "CHARACTER" ] ] ;
occurs-option           ::= "OCCURS" amount @ numeric [ _ @ "TO" upper-bound @ numeric ] [ _ @ "TIMES" ] [ _ @ "DEPENDING" [ _ @ "ON" ] depends-on @ identifier ] { key } { index } ;

sync-option             ::= "SYNC" [ _ @ "HRONIZED" ] [ "LEFT" | "RIGHT" ] ;

just-option             ::= "JUST" [ _ @ "IFIED" ] [ "RIGHT" ] ;
blank-option            ::= "BLANK" [ _ @ "WHEN" ] "ZERO" ;
value-option            ::= "VALUE" [ _ @ "IS" ] symbolic ;

picture-option          ::= picture-format-option | picture-string-option ;
picture-format-option   ::= "PIC" [ _ @ "TURE" ] [ _ @ "IS" ] type @ picture-type [ digits @ indexer ] [ [ _ @ "V" | _ @ "." ] decimal-type @ decimal-picture-type [ decimal-digits @ indexer ] ] ;
picture-string-option   ::= "PIC" [ _ @ "TURE" ] [ _ @ "IS" ] string ;

indexer                 ::= "(" index @ int ")";

usage                   ::= binary-usage
                          | comp-usage
                          | display-usage
                          | index-usage
                          | packed-decimal-usage
                          ;

binary-usage            ::= "BINARY";
comp-usage              ::= "COMP" [ _ @ "UTATIONAL" ] [ _ @ "-" level @ digit ] ;
display-usage           ::= "DISPLAY";
index-usage             ::= "INDEX";
packed-decimal-usage        ::= "PACKED-DECIMAL";

key                     ::= "ASCENDING" | "DESCENDING" [ _ @ "KEY" ] [ _ @ "IS" ] { identifier } ;
index                   ::= "INDEXED" [ _ @ "BY" ] identifier ;
symbolic                ::= literal | variable | figurative ;

figurative              ::= zero
                          | space
                          | high-value
                          | low-value
                          | all-string
                          | null
                          ;

zero                    ::= "ZERO" [ _ @ "ES" ] ;
space                   ::= "SPACE" [ _ @ "S" ] ;
high-value              ::= "HIGH-VALUE" [ _ @ "S" ];
low-value               ::= "LOW-VALUE" [ _ @ "S" ];
all-string              ::= "ALL" string;
null                    ::= "NULL" [ _ @ "S" ] ;

picture-type            ::= /([9AXVSP]+)/;
decimal-picture-type    ::= /([9]+)/;

identifier              ::= name @ /([A-Z][A-Z0-9-]*)/;
digit                   ::= /([0-9])/;
int                     ::= value @ /([-+]?[0-9]*)/ ;
float                   ::= /([-+]?[0-9]*\.?[0-9]*)/; 
string                  ::= /"([^"]*)"|'([^']*)'/;
